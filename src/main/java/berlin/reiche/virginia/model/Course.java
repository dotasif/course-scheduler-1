package berlin.reiche.virginia.model;

import java.util.HashMap;
import java.util.Map;

import org.bson.types.ObjectId;

import com.google.code.morphia.annotations.Entity;
import com.google.code.morphia.annotations.Id;
import com.google.code.morphia.annotations.Reference;

/**
 * Represents a course unit which belongs to a {@link CourseModule}.
 * 
 * @author Konrad Reiche
 * 
 */
@Entity("course")
public class Course implements Comparable<Course> {

    @Id
    ObjectId id = new ObjectId();

    String type;
    int duration;
    int count;

    @Reference
    Map<String, Integer> equipment = new HashMap<>();

    /**
     * The course module to which this course belongs.
     */
    @Reference
    CourseModule module;

    /**
     * Null object for form processing purposes.
     */
    public final static Course NULL_COURSE = new Course(null, -1, -1);

    /**
     * This constructor is used by Morphia via Java reflections.
     */
    @SuppressWarnings("unused")
    private Course() {

    }

    /**
     * Creates a new course by assigning the parameters directly, except the id
     * which is generated by the database after saving the object.
     * 
     * @param type
     *            the course type.
     * @param duration
     *            the duration.
     * @param count
     *            the number of times the course should take place per week.
     * @param module
     *            the course module to which this course belongs.
     */
    public Course(String type, int duration, int count) {
        super();
        this.type = type;
        this.duration = duration;
        this.count = count;
    }

    public int getCount() {
        return count;
    }

    public int getDuration() {
        return duration;
    }

    public Map<String, Integer> getEquipment() {
        return equipment;
    }

    public ObjectId getId() {
        return id;
    }

    public CourseModule getModule() {
        return module;
    }

    public String getType() {
        return type;
    }

    public void setModule(CourseModule module) {
        this.module = module;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(module.getName());
        sb.append(" ");
        sb.append(type);
        sb.append(" ");
        sb.append(id);
        return sb.toString();
    }

    /**
     * Makes the course comparable in order to return the same ordering every
     * time when accessed.
     * 
     * @see java.lang.Comparable#compareTo(java.lang.Object)
     */
    @Override
    public int compareTo(Course o) {
        return id.compareTo(o.id);
    }

    @Override
    public boolean equals(Object o) {
        if (!(o instanceof Course)) {
            return false;
        } else {
            return id.equals(((Course) o).id);
        }
    }

    @Override
    public int hashCode() {
        return id.hashCode();
    }

}
