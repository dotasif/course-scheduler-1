package berlin.reiche.virginia.model;

import java.util.Map;

import org.bson.types.ObjectId;

import com.google.code.morphia.annotations.Entity;
import com.google.code.morphia.annotations.Id;
import com.google.code.morphia.annotations.Reference;

/**
 * Represents a course unit which belongs to a {@link CourseModule}.
 * 
 * @author Konrad Reiche
 * 
 */
@Entity("course")
public class Course {

    @Id
    ObjectId id;

    String type;
    int duration;
    int count;

    @Reference
    Map<String, Integer> features;

    /**
     * The course module to which this course belongs.
     */
    @Reference
    CourseModule module;

    /**
     * This constructor is used by Morphia via Java reflections.
     */
    @SuppressWarnings("unused")
    private Course() {

    }
    
    /**
     * Creates a new course by assigning the parameters directly, except the id
     * which is generated by the database after saving the object.
     * 
     * @param type
     *            the course type.
     * @param duration
     *            the duration.
     * @param count
     *            the number of times the course should take place per week.
     * @param module
     *            the course module to which this course belongs.
     */
    public Course(String type, int duration, int count) {
        super();
        this.type = type;
        this.duration = duration;
        this.count = count;
    }

    public int getCount() {
        return count;
    }

    public int getDuration() {
        return duration;
    }
    
    public CourseModule getModule() {
        return module;
    }
    
    public String getType() {
        return type;
    }

    public void setModule(CourseModule module) {
        this.module = module;
    }

}
